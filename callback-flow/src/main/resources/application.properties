# This server can be fired up as a docker/podman container, see the README.md
%prod.kafka.bootstrap.servers=localhost:9092
%dev.kafka.bootstrap.servers=localhost:9092

# Note the `topic` property; If your broker has different topic names you can change this property.
mp.messaging.incoming.lock-event.connector=smallrye-kafka
mp.messaging.incoming.lock-event.value.deserializer=org.apache.kafka.common.serialization.ByteArrayDeserializer
mp.messaging.incoming.lock-event.topic=lock-event

mp.messaging.outgoing.released-event.connector=smallrye-kafka
mp.messaging.outgoing.released-event.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.released-event.topic=released-event

quarkus.kafka.devservices.enabled=false

%test.quarkus.kafka.devservices.enabled=true
%test.quarkus.kafka.devservices.provider=kafka-native
%test.quarkus.kafka.devservices.topic-partitions.release-event=1
%test.quarkus.kafka.devservices.topic-partitions.lock-event=1
%test.quarkus.kafka.devservices.topic-partitions.released-event=1
%test.quarkus.kafka.devservices.topic-partitions.notify-event=1

dev.mp.messaging.connector.smallrye-kafka.security.protocol=PLAINTEXT
